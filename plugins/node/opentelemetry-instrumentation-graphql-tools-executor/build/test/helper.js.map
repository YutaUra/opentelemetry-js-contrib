{"version":3,"file":"helper.js","sourceRoot":"","sources":["../../test/helper.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;AAGH,iCAAiC;AACjC,sCAAwC;AACxC,gEAA6D;AAE7D,SAAgB,iBAAiB,CAC/B,IAAkB,EAClB,SAAiB,EACjB,SAAiB,EACjB,SAAiB,EACjB,MAAc,EACd,YAAqB;IAErB,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;IAC9B,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,EAAE,gBAAS,CAAC,OAAO,CAAC,CAAC;IACrD,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,+BAAc,CAAC,UAAU,CAAC,EAAE,SAAS,CAAC,CAAC;IACpE,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,+BAAc,CAAC,UAAU,CAAC,EAAE,SAAS,CAAC,CAAC;IACpE,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,+BAAc,CAAC,UAAU,CAAC,EAAE,SAAS,CAAC,CAAC;IACpE,MAAM,CAAC,eAAe,CAAC,KAAK,CAAC,+BAAc,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,CAAC;IAC7D,IAAI,YAAY,EAAE;QAChB,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;KACzD;AACH,CAAC;AAjBD,8CAiBC","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ReadableSpan } from '@opentelemetry/sdk-trace-base';\nimport * as assert from 'assert';\nimport { SpanNames } from '../src/enum';\nimport { AttributeNames } from '../src/enums/AttributeNames';\n\nexport function assertResolveSpan(\n  span: ReadableSpan,\n  fieldName: string,\n  fieldPath: string,\n  fieldType: string,\n  source: string,\n  parentSpanId?: string\n) {\n  const attrs = span.attributes;\n  assert.deepStrictEqual(span.name, SpanNames.RESOLVE);\n  assert.deepStrictEqual(attrs[AttributeNames.FIELD_NAME], fieldName);\n  assert.deepStrictEqual(attrs[AttributeNames.FIELD_PATH], fieldPath);\n  assert.deepStrictEqual(attrs[AttributeNames.FIELD_TYPE], fieldType);\n  assert.deepStrictEqual(attrs[AttributeNames.SOURCE], source);\n  if (parentSpanId) {\n    assert.deepStrictEqual(span.parentSpanId, parentSpanId);\n  }\n}\n"]}