{"version":3,"file":"graphql-adaptor.js","sourceRoot":"","sources":["../../test/graphql-adaptor.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,sDAA6D;AAC7D,qCAAqE;AAE9D,MAAM,OAAO,GAAG,CAAC,IAOvB,EAAE,EAAE,CACH,IAAA,6BAAkB,EAAC;IACjB,MAAM,EAAE,IAAI,CAAC,MAAM;IACnB,QAAQ,EAAE,IAAA,eAAK,EAAC,IAAI,CAAC,MAAM,CAAC;IAC5B,cAAc,EAAE,IAAI,CAAC,cAAc;IACnC,SAAS,EAAE,IAAI,CAAC,SAAS;IACzB,aAAa,EAAE,IAAI,CAAC,aAAa;IACjC,aAAa,EAAE,IAAI,CAAC,aAAa;CAClC,CAAC,CAAC;AAfQ,QAAA,OAAO,WAef","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { normalizedExecutor } from '@graphql-tools/executor';\nimport { GraphQLFieldResolver, GraphQLSchema, parse } from 'graphql';\n\nexport const graphql = (args: {\n  schema: GraphQLSchema;\n  source: string;\n  variableValues?: Record<string, unknown>;\n  rootValue?: unknown;\n  fieldResolver?: GraphQLFieldResolver<unknown, unknown>;\n  operationName?: string;\n}) =>\n  normalizedExecutor({\n    schema: args.schema,\n    document: parse(args.source),\n    variableValues: args.variableValues,\n    rootValue: args.rootValue,\n    fieldResolver: args.fieldResolver,\n    operationName: args.operationName,\n  });\n"]}